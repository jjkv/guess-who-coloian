{"ast":null,"code":"import _objectSpread from \"/Users/jack_osx/guesswho/guess-who-coloian/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/jack_osx/guesswho/guess-who-coloian/src/Game.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Game.scss\";\nimport PersonCard from \"./PersonCard\";\nimport Button from \"./Button\";\nimport { choosingPerson, initialPeopleData } from \"./PeopleData\";\nimport { POSSIBLE, ELIMINATED, generateRandomFromArray } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [isChoosingPerson, setIsChoosingPerson] = useState(false);\n  const [chosenPerson, setChosenPerson] = useState(null);\n  const [board, setBoard] = useState(initialPeopleData);\n\n  // Runs once on initial page load to determine the letter options\n  useEffect(() => {\n    setChosenPerson(generateRandomFromArray(initialPeopleData));\n  }, []);\n  const toggleStatus = personToToggle => setBoard(board.map(person => person.name === personToToggle.name ? _objectSpread(_objectSpread({}, person), {}, {\n    status: person.status === POSSIBLE ? ELIMINATED : POSSIBLE\n  }) : _objectSpread({}, person)));\n  const getNumberOfRemainingPossibilities = () => board.filter(person => person.status === POSSIBLE).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game-yourPerson\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), isChoosingPerson ? /*#__PURE__*/_jsxDEV(PersonCard, {\n          person: choosingPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PersonCard, {\n          person: chosenPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsChoosingPerson(true),\n          children: \"Choose Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setIsChoosingPerson(true);\n            setChosenPerson(generateRandomFromArray(initialPeopleData));\n          },\n          children: \"Randomize Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setBoard(initialPeopleData);\n            setIsChoosingPerson(true);\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Possibilities Remaining:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \"\".concat(getNumberOfRemainingPossibilities(), \" / \").concat(board.length)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game-board\",\n      children: board.map((person, index) => /*#__PURE__*/_jsxDEV(PersonCard, {\n        person: person,\n        onClick: () => {\n          if (isChoosingPerson) {\n            setChosenPerson(person);\n            setIsChoosingPerson(false);\n          } else {\n            toggleStatus(person);\n          }\n        }\n      }, \"\".concat(person, \"-\").concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"C3Pw18vU+EDvOZWVDAiOV7YUiqs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","useState","PersonCard","Button","choosingPerson","initialPeopleData","POSSIBLE","ELIMINATED","generateRandomFromArray","jsxDEV","_jsxDEV","Game","_s","isChoosingPerson","setIsChoosingPerson","chosenPerson","setChosenPerson","board","setBoard","toggleStatus","personToToggle","map","person","name","_objectSpread","status","getNumberOfRemainingPossibilities","filter","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","concat","index","_c","$RefreshReg$"],"sources":["/Users/jack_osx/guesswho/guess-who-coloian/src/Game.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./Game.scss\";\nimport PersonCard from \"./PersonCard\";\nimport Button from \"./Button\";\nimport { choosingPerson, initialPeopleData } from \"./PeopleData\";\nimport { POSSIBLE, ELIMINATED, generateRandomFromArray } from \"./utils\";\n\nconst Game = () => {\n  const [isChoosingPerson, setIsChoosingPerson] = useState(false);\n  const [chosenPerson, setChosenPerson] = useState(null);\n  const [board, setBoard] = useState(initialPeopleData);\n\n  // Runs once on initial page load to determine the letter options\n  useEffect(() => {\n    setChosenPerson(generateRandomFromArray(initialPeopleData));\n  }, []);\n\n  const toggleStatus = (personToToggle) =>\n    setBoard(\n      board.map((person) =>\n        person.name === personToToggle.name\n          ? {\n              ...person,\n              status: person.status === POSSIBLE ? ELIMINATED : POSSIBLE\n            }\n          : { ...person }\n      )\n    );\n\n  const getNumberOfRemainingPossibilities = () =>\n    board.filter((person) => person.status === POSSIBLE).length;\n\n  return (\n    <div className=\"Game\">\n      <div className=\"Game-sidebar\">\n        <div className=\"Game-yourPerson\">\n          <h2>Your Person</h2>\n          {isChoosingPerson ? (\n            <PersonCard person={choosingPerson} />\n          ) : (\n            <PersonCard person={chosenPerson} />\n          )}\n        </div>\n        <div className=\"Game-actions\">\n          <Button onClick={() => setIsChoosingPerson(true)}>\n            Choose Person\n          </Button>\n          <Button\n            onClick={() => {\n                setIsChoosingPerson(true);\n                setChosenPerson(generateRandomFromArray(initialPeopleData))\n              }\n            }\n          >\n            Randomize Person\n          </Button>\n          <Button\n            onClick={() => {\n              setBoard(initialPeopleData);\n              setIsChoosingPerson(true);\n            }}\n          >\n            Clear\n          </Button>\n        </div>\n        <p>\n          Possibilities Remaining:\n          <br />\n          {`${getNumberOfRemainingPossibilities()} / ${board.length}`}\n        </p>\n      </div>\n      <div className=\"Game-board\">\n        {board.map((person, index) => (\n          <PersonCard\n            key={`${person}-${index}`}\n            person={person}\n            onClick={() => {\n              if (isChoosingPerson) {\n                setChosenPerson(person);\n                setIsChoosingPerson(false);\n              } else {\n                toggleStatus(person);\n              }\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}